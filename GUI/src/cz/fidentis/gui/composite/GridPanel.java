/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.fidentis.gui.composite;

import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.Box.Filler;

/**
 *
 * @author Katka
 */
public class GridPanel extends javax.swing.JPanel {

    /**
     * Creates new form GridPanel
     */
    public GridPanel() {
        width = 120;
        height = 110;
        initComponents();
        
    }

    public void resizeGrid(Dimension d){
        scrollPane.setSize(d);
        gridPane.setSize(d);
        calculateGridSize();
    }
    
    public void clear() {
        width = 120;
        height = 110;
        components.clear();
        gridPane.removeAll();
        
    }

    public void addComponent(Component comp) {
        gridPane.add(comp);
        components.add(comp);
 
        if (comp.getMinimumSize().width > width) {
            width = comp.getMinimumSize().width ;
        }
        if (comp.getMinimumSize().height > height) {

            height = comp.getMinimumSize().width;
        }
        
        calculateGridSize();
        gridPane.repaint();
        gridPane.revalidate();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        gridPane = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(520, 300));

        scrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                scrollPaneComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                scrollPaneComponentShown(evt);
            }
        });

        gridPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                gridPaneComponentResized(evt);
            }
        });
        gridPane.setLayout(new java.awt.GridLayout(1, 0));
        scrollPane.setViewportView(gridPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void gridPaneComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_gridPaneComponentResized
    }//GEN-LAST:event_gridPaneComponentResized

    private void scrollPaneComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_scrollPaneComponentResized
        calculateGridSize();
    }//GEN-LAST:event_scrollPaneComponentResized

    private void scrollPaneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_scrollPaneComponentShown
        calculateGridSize();
    }//GEN-LAST:event_scrollPaneComponentShown

    private void calculateGridSize() {       
        int scrollPaneWidth = scrollPane.getWidth();
        int scrollPaneHeight = scrollPane.getHeight();
        int items = components.size();
        int columns = scrollPaneWidth / width - 1;
        int rows = scrollPaneHeight / height;
        if(columns<1) {
            columns =1;
        }
        
        gridPane.removeAll();
        for (int i = 0; i < components.size(); i++) {
            gridPane.add(components.get(i));
        }

        if (items < (rows * columns)) {
            for (int i = 0; i < (rows * columns - items); i++) {
                gridPane.add(new Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0)));
            }
        }

        gridPane.setLayout(new java.awt.GridLayout(-1, columns));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gridPane;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
    private int width;
    private int height;
    private ArrayList<Component> components = new ArrayList<Component>();
}
